@using SmartStore.Web.Framework;
@model SmartStore.Slider.Models.SliderModel
@{
	Layout = "";
}

<div class="plugin-actions">
	<button type="submit" name="save" value="save" class="btn btn-warning">
		<i class="fa fa-check"></i>
		<span>@T("Admin.Common.Save")</span>
	</button>
</div>

@{ Html.RenderAction("StoreScopeConfiguration", "Setting", new { area = "Admin" }); }

@Html.ValidationSummary(false)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Enabled)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.Enabled)
            @Html.ValidationMessageFor(model => model.Enabled)
        </td>
    </tr>

    @{
        for (var i = 0; i < Model.Slides.Count(); i++)
        {
            <tr>
                <td class="adminTitle">
                    <div class="ctl-label"><label for="Enabled">Slide @(i+1)</label></div>
                </td>
                <td class="adminData">
                    <p>
                        @Html.EditorFor(model => model.Slides[i].PictureId, new { transientUpload = true })
                        @Html.ValidationMessageFor(model => model.Slides[i].PictureId)
                    </p>

                    <label>Link</label>
                    @Html.SettingEditorFor(model => model.Slides[i].Link)
                    @Html.ValidationMessageFor(model => model.Slides[i].Link)
                </td>
            </tr>
            <tr>
                <td colspan="2"><hr></td>
            </tr>
        }
    }


</table>    
}

